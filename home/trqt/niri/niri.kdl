input {
	keyboard {
		xkb {
			// You can set rules, model, layout, variant and options.
			// For more information, see xkeyboard-config(7).

			// For example:
			layout "br"
            variant "thinkpad"
			// options "grp:win_space_toggle,compose:ralt,ctrl:nocaps"
			options "caps:ctrl_modifier"
		}

		// You can set the keyboard repeat parameters. The defaults match wlroots and sway.
		// Delay is in milliseconds before the repeat starts. Rate is in characters per second.
		repeat-delay 200
		repeat-rate 30

		// Niri can remember the keyboard layout globally (the default) or per-window.
		// - "global" - layout change is global for all windows.
		// - "window" - layout is tracked for each window individually.
		// track-layout "global"
	}

	focus-follows-mouse max-scroll-amount="0%"

	// Next sections include libinput settings.
	// Omitting settings disables them, or leaves them at their default values.
	touchpad {
		dwt
        dwtp
		//accel-speed 0.2
	}

	disable-power-key-handling
}

layout {
	// similar to the focus ring, but always visible.
	focus-ring {
		width 1
		inactive-color "#000000"
		active-color "#505050"
	}

	// You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
	preset-column-widths {
		// Proportion sets the width as a fraction of the output width, taking gaps into account.
		// For example, you can perfectly fit four windows sized "proportion 0.25" on an output.
		// The default preset widths are 1/3, 1/2 and 2/3 of the output.
		proportion 0.33333
		proportion 0.5
		proportion 0.66667
	}

	// You can change the default width of the new windows.
	// If you leave the brackets empty, the windows themselves will decide their initial width.
	default-column-width { proportion 0.5; }

	// Set gaps around windows in logical pixels.
	gaps 10

	// Struts shrink the area occupied by windows, similarly to layer-shell panels.
	// You can think of them as a kind of outer gaps. They are set in logical pixels.
	// Left and right struts will cause the next window to the side to always be visible.
	// Top and bottom struts will simply add outer gaps in addition to the area occupied by
	// layer-shell panels and regular gaps.
	struts {
		left -10
		right -10
		top -10
		bottom -10
	}

	tab-indicator {
		width 8
		gap 8
		length total-proportion=1.0
		position "top"
		place-within-column
		hide-when-single-tab
	}

	// When to center a column when changing focus, options are:
	// - "never", default behavior, focusing an off-screen column will keep at the left
	//   or right edge of the screen.
	// - "on-overflow", focusing a column will center it if it doesn't fit
	//   together with the previously focused column.
	// - "always", the focused column will always be centered.
	center-focused-column "never"
}


// TODO: Put wallpaper in nix store
spawn-at-startup "@swaybg@/bin/swaybg" "-i" "/home/trqt/media/pics/bg.jpg" "-m" "fill"
spawn-at-startup "@copyq@/bin/copyq"
spawn-at-startup "@xwaylandSatellite@/bin/xwayland-satellite"
spawn-at-startup "@foot@/bin/foot" "--server"


environment {
	// Set a variable like this:
	// QT_QPA_PLATFORM "wayland"
	DISPLAY ":0"
}

cursor {
	xcursor-theme "@cursorTheme@"
	xcursor-size 24
}

prefer-no-csd

// You can also set this to null to disable saving screenshots to disk.
screenshot-path null

// Settings for the "Important Hotkeys" overlay.
hotkey-overlay {
	// Uncomment this line if you don't want to see the hotkey help at niri startup.
	skip-at-startup
}

// Animation settings.
animations {
	// Uncomment to turn off all animations.
	// off

	// Slow down all animations by this factor. Values below 1 speed them up instead.
	// slowdown 3.0

	// You can configure all individual animations.
	// Available settings are the same for all of them.
	// - off disables the animation.
	//
	// Niri supports two animation types: easing and spring.
	// You can set properties for only ONE of them.
	//
	// Easing has the following settings:
	// - duration-ms sets the duration of the animation in milliseconds.
	// - curve sets the easing curve. Currently, available curves
	//   are "ease-out-cubic" and "ease-out-expo".
	//
	// Spring animations work better with touchpad gestures, because they
	// take into account the velocity of your fingers as you release the swipe.
	// The parameters are less obvious and generally should be tuned
	// with trial and error. Notably, you cannot directly set the duration.
	// You can use this app to help visualize how the spring parameters
	// change the animation: https://flathub.org/apps/app.drey.Elastic
	//
	// A spring animation is configured like this:
	// - spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
	//
	// The damping ratio goes from 0.1 to 10.0 and has the following properties:
	// - below 1.0: underdamped spring, will oscillate in the end.
	// - above 1.0: overdamped spring, won't oscillate.
	// - 1.0: critically damped spring, comes to rest in minimum possible time
	//				without oscillations.
	//
	// However, even with damping ratio = 1.0 the spring animation may oscillate
	// if "launched" with enough velocity from a touchpad swipe.
	//
	// Lower stiffness will result in a slower animation more prone to oscillation.
	//
	// Set epsilon to a lower value if the animation "jumps" in the end.
	//
	// The spring mass is hardcoded to 1.0 and cannot be changed. Instead, change
	// stiffness proportionally. E.g. increasing mass by 2x is the same as
	// decreasing stiffness by 2x.

	// Animation when switching workspaces up and down,
	// including after the touchpad gesture.
	workspace-switch {
		// off
		// spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
	}

	// All horizontal camera view movement:
	// - When a window off-screen is focused and the camera scrolls to it.
	// - When a new window appears off-screen and the camera scrolls to it.
	// - When a window resizes bigger and the camera scrolls to show it in full.
	// - And so on.
	horizontal-view-movement {
		// off
		// spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
	}

	// Window opening animation. Note that this one has different defaults.
	window-open {
		// off
		// duration-ms 150
		// curve "ease-out-expo"

		// Example for a slightly bouncy window opening:
		// spring damping-ratio=0.8 stiffness=1000 epsilon=0.0001
	}

	// Config parse error and new default config creation notification
	// open/close animation.
	config-notification-open-close {
		// off
		// spring damping-ratio=0.6 stiffness=1000 epsilon=0.001
	}
}

// Window rules let you adjust behavior for individual windows.
// They are processed in order of appearance in this file.
// (This example rule is commented out with a "/-" in front.)
/-window-rule {
	// Match directives control which windows this rule will apply to.
	// You can match by app-id and by title.
	// The window must match all properties of the match directive.
	match app-id="org.myapp.MyApp" title="My Cool App"

	// There can be multiple match directives. A window must match any one
	// of the rule's match directives.
	//
	// If there are no match directives, any window will match the rule.
	match title="Second App"

	// You can also add exclude directives which have the same properties.
	// If a window matches any exclude directive, it won't match this rule.
	//
	// Both app-id and title are regular expressions.
	// Raw KDL strings are helpful here.
	exclude app-id=r#"\.unwanted\."#

	// Here are the properties that you can set on a window rule.
	// You can override the default column width.
	default-column-width { proportion 0.75; }

	// You can set the output that this window will initially open on.
	// If such an output does not exist, it will open on the currently
	// focused output as usual.
	open-on-output "eDP-1"

	// Make this window open as a maximized column.
	open-maximized true

	// Make this window open fullscreen.
	open-fullscreen true
	// You can also set this to false to prevent a window from opening fullscreen.
	// open-fullscreen false
}

window-rule {
	match app-id="com.github.hluk.copyq" title="^CopyQ$"
	open-floating true
	// Can I move it to my mouse location?
	// https://github.com/YaLTeR/niri/issues/978
}

window-rule {
	match app-id="ghidra"
    exclude title="^CodeBrowser"
	open-floating true
	// Can I move it to my mouse location?
	// https://github.com/YaLTeR/niri/issues/978
}

window-rule {
	match app-id="firefox" title="^Picture-in-Picture$"
	match app-id="thunderbird" title=".*Reminder.*"
	open-floating true
}

window-rule {
	match app-id="thunderbird"
	match app-id="gcr-prompter"
	block-out-from "screencast"
}

layer-rule {
	match namespace="swaync-notification-window"
	match namespace="swaync-control-center"
	match at-startup=true
	block-out-from "screencast"
}

binds {
	// shows a list of important hotkeys.
	Mod+Shift+Slash { show-hotkey-overlay; }

	// Suggested binds for running programs: terminal, app launcher, screen locker.
	Mod+Return { spawn "@foot@/bin/footclient"; }
	Mod+D { spawn "@fuzzel@/bin/fuzzel"; }
	Mod+Shift+G { spawn "@swaync@/bin/swaync-client" "-t"; }
	Mod+G { spawn "@swaync@/bin/swaync-client" "-d"; }

	// Function row
	XF86AudioMute allow-when-locked=true { spawn "@wireplumber@/bin/wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
	XF86AudioRaiseVolume { spawn "@wireplumber@/bin/wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.05+"; }
	XF86AudioLowerVolume { spawn "@wireplumber@/bin/wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.05-"; }
	Shift+XF86AudioRaiseVolume { spawn "@wireplumber@/bin/wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.01+"; }
	Shift+XF86AudioLowerVolume { spawn "@wireplumber@/bin/wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.01-"; }
	XF86AudioMicMute { spawn "@wireplumber@/bin/wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }
	XF86AudioPlay { spawn "@playerctl@/bin/playerctl" "play-pause"; }
	XF86AudioPrev { spawn "@playerctl@/bin/playerctl" "previous"; }
	XF86AudioNext { spawn "@playerctl@/bin/playerctl" "next"; }
	XF86MonBrightnessUp { spawn "@brightnessctl@/bin/brightnessctl" "set" "5%+"; }
	XF86MonBrightnessDown { spawn "@brightnessctl@/bin/brightnessctl" "set" "5%-"; }
	Shift+XF86MonBrightnessUp { spawn "@brightnessctl@/bin/brightnessctl" "set" "1%+"; }
	Shift+XF86MonBrightnessDown { spawn "@brightnessctl@/bin/brightnessctl" "set" "1%-"; }

	// Clipboard overlay
	Control+Alt+H { spawn "@copyq@/bin/copyq" "menu"; }

	Mod+Shift+C { close-window; }

	Mod+H { focus-column-left; }
	Mod+J { focus-window-or-workspace-down; }
	Mod+K { focus-window-or-workspace-up; }
	Mod+L { focus-column-right; }

	Mod+Shift+H { move-column-left; }
	Mod+Shift+J { move-window-down-or-to-workspace-down; }
	Mod+Shift+K { move-window-up-or-to-workspace-up; }
	Mod+Shift+L { move-column-right; }

	// Alternative commands that move across workspaces when reaching
	// the first or last window in a column.

	Mod+Home { focus-column-first; }
	Mod+End { focus-column-last; }
	Mod+Shift+Home { move-column-to-first; }
	Mod+Shift+End { move-column-to-last; }

	Mod+Ctrl+H { focus-monitor-left; }
	Mod+Ctrl+J { focus-monitor-down; }
	Mod+Ctrl+K { focus-monitor-up; }
	Mod+Ctrl+L { focus-monitor-right; }

	Mod+Shift+Ctrl+H { move-column-to-monitor-left; }
	Mod+Shift+Ctrl+J { move-column-to-monitor-down; }
	Mod+Shift+Ctrl+K { move-column-to-monitor-up; }
	Mod+Shift+Ctrl+L { move-column-to-monitor-right; }

	// You can refer to workspaces by index. However, keep in mind that
	// niri is a dynamic workspace system, so these commands are kind of
	// "best effort". Trying to refer to a workspace index bigger than
	// the current workspace count will instead refer to the bottommost
	// (empty) workspace.
	//
	// For example, with 2 workspaces + 1 empty, indices 3, 4, 5 and so on
	// will all refer to the 3rd workspace.
	Mod+1 { focus-workspace 1; }
	Mod+2 { focus-workspace 2; }
	Mod+3 { focus-workspace 3; }
	Mod+4 { focus-workspace 4; }
	Mod+5 { focus-workspace 5; }
	Mod+6 { focus-workspace 6; }
	Mod+7 { focus-workspace 7; }
	Mod+8 { focus-workspace 8; }
	Mod+9 { focus-workspace 9; }
	Mod+0 { focus-workspace 10; }
	Mod+Shift+1 { move-column-to-workspace 1; }
	Mod+Shift+2 { move-column-to-workspace 2; }
	Mod+Shift+3 { move-column-to-workspace 3; }
	Mod+Shift+4 { move-column-to-workspace 4; }
	Mod+Shift+5 { move-column-to-workspace 5; }
	Mod+Shift+6 { move-column-to-workspace 6; }
	Mod+Shift+7 { move-column-to-workspace 7; }
	Mod+Shift+8 { move-column-to-workspace 8; }
	Mod+Shift+9 { move-column-to-workspace 9; }
	Mod+Shift+0 { move-column-to-workspace 10; }

	Mod+BracketLeft { consume-or-expel-window-left; }
	Mod+BracketRight { consume-or-expel-window-right; }

	Mod+R { switch-preset-column-width; }
	Mod+F { fullscreen-window; }
	Mod+Shift+F { maximize-column; }
	Mod+C { center-column; }

	// Finer width adjustments.
	Mod+Minus { set-column-width "-10%"; }
	Mod+Equal { set-column-width "+10%"; }

	// Finer height adjustments when in column with other windows.
	Mod+Shift+Minus { set-window-height "-10%"; }
	Mod+Shift+Equal { set-window-height "+10%"; }

	Print { screenshot; }

	Mod+Tab { spawn "@niriswitch@/bin/niriswitch"; }

	Mod+Shift+Space { toggle-window-floating; }
	Mod+Space { switch-focus-between-floating-and-tiling; }

	Mod+W { toggle-column-tabbed-display; }

	// Emoji picker
	Super+Alt+Control+Shift+Space { spawn "/usr/bin/env" "BEMOJI_ECHO_NEWLINE=false" "BEMOJI_PICKER_CMD=@fuzzel@/bin/fuzzel --dmenu" "@bemoji@/bin/bemoji"; }

	// The quit action will show a confirmation dialog to avoid accidental exits.
	// If you want to skip the confirmation dialog, set the flag like so:
	// Mod+Shift+E { quit skip-confirmation=true; }
	Mod+Shift+E { quit; }

    Mod+M { spawn "@swayexitify@/bin/swayexitify" "lock"; }
	//XF86Screensaver { spawn "loginctl" "lock"; }


	// This debug bind will tint all surfaces green, unless they are being
	// directly scanned out. It's therefore useful to check if direct scanout
	// is working.
	// Mod+Shift+Ctrl+T { toggle-debug-tint; }
}

// Settings for debugging. Not meant for normal use.
// These can change or stop working at any point with little notice.
debug {
	// Make niri take over its DBus services even if it's not running as a session.
	// Useful for testing screen recording changes without having to relogin.
	// The main niri instance will *not* currently take back the services; so you will
	// need to relogin in the end.
	// dbus-interfaces-in-non-session-instances

	// Wait until every frame is done rendering before handing it over to DRM.
	// wait-for-frame-completion-before-queueing

	// Enable direct scanout into overlay planes.
	// May cause frame drops during some animations on some hardware.
	// enable-overlay-planes

	// Disable the use of the cursor plane.
	// The cursor will be rendered together with the rest of the frame.
	// disable-cursor-plane

	// Override the DRM device that niri will use for all rendering.
	// render-drm-device "/dev/dri/renderD129"

	// Enable the color-transformations capability of the Smithay renderer.
	// May cause a slight decrease in rendering performance.
	// enable-color-transformations-capability

	// Emulate zero (unknown) presentation time returned from DRM.
	// This is a thing on NVIDIA proprietary drivers, so this flag can be
	// used to test that we don't break too hard on those systems.
	// emulate-zero-presentation-time
}
